# Set them in the runtime environment

# CouchDB and CouchDB Lucene configuration
# =====================================

# Binding port to expose CouchDB
# For instance: Port 5984
# TODO: Change this configuration if required
COUCHDB_PORT='5984'

# CouchDB admin credentials
# Avoid special characters and spaces!
# TODO: Set this configuration
COUCHDB_USER=''
COUCHDB_PASSWORD=''

# Nodename. Make sure this matches the older node's name
# in case you are migrating from a backup.
# Leave it as follows!
COUCHDB_NODENAME='127.0.0.1'

# Binding port to expose CouchDB Lucene
# For instance: Port 5985
# TODO: Change this configuration if required
LUCENE_PORT='5985'

# Seconds to wait before displaying the containers
# and set up some database configurations
SECONDS_TO_WAIT='30'

# McM web application 
# =====================================

# Seconds to wait before starting the McM application
MCM_WARMUP_SECONDS='10'

# McM CouchDB URL
# This is the address to reach the CouchDB container
MCM_COUCHDB_URL='http://mcm-couchdb:5984/'

# McM CouchDB Lucene URL
MCM_LUCENE_URL='http://mcm-couchdb-lucene:5985/'

# Location for the database dump
# Set one of the two following environment variables
# TODO: Set this configuration
# Public download URL
MCM_EXAMPLE_DATA_URL=''

# Local dump file
# Set it with the absolute path to the compressed file
MCM_EXAMPLE_DATA_PATH=''

# Repository path
# This is the absolute path to the location of the repository
# in your filesystem and the mcm/ folder
# For instance if you cloned the repository as `my-mcm-copy`
# e.g: `git clone https://github.com/cms-PdmV/cmsPdmV.git my-mcm-copy`
# The repo path would be: `REPO_PATH="$(pwd -P)/my-mcm-copy/mcm"`
# TODO: Set this configuration
REPO_PATH=''

# Absolute path to the: `couchdb-lucene.ini` inside the repository.
# Set it as, for instance: `${REPO_PATH}/deploy/couchdb-lucene.ini`
# TODO: Set this configuration
TO_INI_PATH=''

# Basic authentication header for writing access
# to the CouchDB instance.
# Set it as: 
# HEADER=$(echo -n "${COUCHDB_USER}:${COUCHDB_PASSWORD}" | base64)
# COUCH_CRED="Basic ${HEADER}"
# TODO: Set this configuration
COUCH_CRED=''

# Absolute path to the certificate and key file for accessing
# the CMS Web Services: In specific, to interact with ReqMgr2.
# Create a copy of them and set read permission to others
# e.g: chmod 0755 <cert file> <key file>
# This avoids permission errors when mounting them to the container.
# TODO: Set these configurations
CMSWEB_CERTIFICATE_FILE=''
CMSWEB_KEY_FILE=''

# If you are deploying a version without using containers
# set the following variables too with the same values of
# USERCRT="${CMSWEB_CERTIFICATE_FILE}"
# USERKEY="${USERKEY}"

# Executor node.
# TODO: Set this configuration
MCM_EXECUTOR_HOST=''

# Credentials for accessing the executor node.
# TODO: Set this configuration
MCM_SERVICE_ACCOUNT_USERNAME=''
MCM_SERVICE_ACCOUNT_PASSWORD=''

# Absolute path for a working folder
# inside the executor node.
# Do not forget to append a trailing slash to the path!
# TODO: Set this configuration
MCM_WORK_LOCATION_PATH=''

# Web application port
# For instance: 8000
# TODO: Set this configuration
MCM_PORT=''

# Web application host
# For instance: 0.0.0.0
MCM_HOST='0.0.0.0'

# The following URL is used at the moment
# of generating commands to be executed using `wmcontrol`
# Make sure the URL is reachable from the `${MCM_EXECUTOR_HOST}`
# e.g: `"http://$(hostname):${MCM_PORT}/"`
# TODO: Set this configuration
MCM_BASE_URL=''
